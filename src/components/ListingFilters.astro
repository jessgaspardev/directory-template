---
interface Props {
  totalCount: number;
}

const { totalCount } = Astro.props;
---

<div class="bg-white rounded-lg shadow-md mb-6 overflow-hidden">
  <button 
    id="filterToggle"
    class="w-full px-4 py-3 flex justify-between items-center bg-gray-100 hover:bg-gray-200 transition-colors cursor-pointer text-left"
  >
    <h2 class="text-xl font-semibold">Filter Listings</h2>
    <div class="flex items-center">
      <span id="activeFilterCount" class="text-sm bg-blue-600 text-white rounded-full px-2 py-0.5 mr-2 hidden">0</span>
      <svg id="filterArrow" class="w-5 h-5 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </div>
  </button>
  
  <div id="filterContent" class="hidden p-4">
    <div class="mb-3">
      <p class="text-gray-700 mb-1 text-sm">Showing <span id="filteredCount">{totalCount}</span> of {totalCount} listings</p>
    </div>
    
    <div class="grid grid-cols-2 md:grid-cols-3 gap-x-4 gap-y-2">
      <!-- Service Options -->

      <!-- Delivery Options -->
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterDelivery" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="delivery"
        />
        <label for="filterDelivery" class="text-md text-gray-700">🚚 Delivery</label>
      </div>
      
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterTakeaway" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="takeaway"
        />
        <label for="filterTakeaway" class="text-md text-gray-700">🥡 Takeaway</label>
      </div>

       <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterReservations" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="accepts reservations"
        />
        <label for="filterReservations" class="text-md text-gray-700">✍️ Accepts Reservations</label>
      </div>
   
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterOutdoorSeating" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="outdoor seating"
        />
        <label for="filterOutdoorSeating" class="text-md text-gray-700">🌲 Outdoor Seating</label>
      </div>
    
      <!-- Parking -->
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterParking" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="parking lot"
        />
        <label for="filterParking" class="text-md text-gray-700">🚗 Free Parking Lot</label>
      </div>

      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterWheelchair" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="wheelchair"
        />
        <label for="filterWheelchair" class="text-md text-gray-700">🦽 Wheelchair Access</label>
      </div>
      
      <!-- Pets -->
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterPets" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="dogs allowed"
        />
        <label for="filterPets" class="text-md text-gray-700">🐱 Pet Friendly</label>
      </div>
      
      <!-- Vegetarian Options -->
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterVegetarian" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="vegetarian"
        />
        <label for="filterVegetarian" class="text-md text-gray-700">🌿 Vegetarian Options</label>
      </div>

      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterFamily" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="family friendly"
        />
        <label for="filterFamily" class="text-md text-gray-700">👪 Family Friendly</label>
      </div>

      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterKids" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="good for kids"
        />
        <label for="filterKids" class="text-md text-gray-700">👧 Good For Kids</label>
      </div>

      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="filterTourists" 
          class="feature-filter h-4 w-4 mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
          data-feature="good for tourists"
        />
        <label for="filterTourists" class="text-md text-gray-700">🤠 Good For Tourists</label>
      </div>

    </div>
     
    <div class="mt-4 flex justify-end">
      <button 
        id="clearFilters"
        class="text-blue-600 hover:text-blue-800 transition-colors px-4 py-2 text-sm"
      >
        Clear Filters
      </button>
    </div>
  </div>
</div>

<script>
  // Filter toggle functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterToggle = document.getElementById('filterToggle');
    const filterContent = document.getElementById('filterContent');
    const filterArrow = document.getElementById('filterArrow');
    
    if (filterToggle && filterContent && filterArrow) {
      filterToggle.addEventListener('click', () => {
        // Toggle visibility
        filterContent.classList.toggle('hidden');
        // Rotate arrow
        filterArrow.classList.toggle('rotate-180');
      });
    }
  });
</script>

<script>
  // Import the filter initialization function
  import { initializeFilters } from '../scripts/checkboxFilters.js';
  
  // Initialize filters after the DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    initializeFilters();
  });
</script>